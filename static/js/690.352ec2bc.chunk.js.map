{"version":3,"file":"static/js/690.352ec2bc.chunk.js","mappings":"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","sources":["components/ContactListItem/ContactListItem.styled.js","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/EditForm/EditForm.styled.js","components/EditForm/EditForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/filter.jsx","pages/contactsPage/ContactsPage.styled.js","pages/contactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const SearchList = styled.ul`\n  padding: 0px;\n  margin: 0px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  flex-direction: row;\n`;\n\nexport const ContactItem = styled.li`\n    display: flex;\n    align-items: center;\n    margin-bottom: 10px;\n    color: blue;\n    justify-content: space-between;\n\n    cursor: pointer;\n\n    &:hover {\n        background-color: #f0f0f0;\n        button {\n        opacity: 1;\n        }\n    }\n`;\n\nexport const Text = styled.p`\n    margin: 0;\n    :not(:last-child) {\n        margin-right: 5px;\n    }\n`;\n\nexport const Button = styled.button`\n    font-size: 12px;\n    width: 50px;\n    height: 24px;\n    background-color: white;\n    border: 1px solid gray;\n    border-radius: 5px;\n    cursor: pointer;\n    opacity: 0.6;\n\n    &:hover,\n    &:focus {\n        border-color: red;\n        color: red;\n        opacity: 1;\n    }\n`;","import styled from '@emotion/styled';\n\nexport const ModalOverlay = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(0, 0, 0, 0.6);\n    z-index: 1200;\n`;\nexport const Box = styled.div`\n    padding: 30px 40px;\n    width: 440px;\n    background-color: #fff;\n    border: 1px solid #aaa;\n    border-radius: 15px;\n    margin: 0 auto;\n    /* margin: 30px auto; */\n\n`;\n\nexport const ModalField = styled.div`\n    max-width: calc(100vw - 48px);\n    max-height: calc(100vh - 24px);\n`;","import PropTypes from 'prop-types';\nimport { useEffect } from \"react\";\nimport { ModalOverlay, ModalField, Box } from './Modal.styled';\nimport { createPortal } from \"react-dom\";\n\nconst Modal = ({ children, onClose }) => {\n    useEffect(() => {\n        const handleOnClose = (event) => {\n            if (event.code === 'Escape') {\n                onClose();\n            }\n        };\n\n        window.addEventListener('keydown', handleOnClose);\n\n        return () => {\n            window.removeEventListener('keydown', handleOnClose);\n        };\n    }, [onClose]);\n\n    const handleBackdropClick = (e) => {\n        if (e.currentTarget === e.target) {\n            onClose();\n        }\n    };\n\n    return createPortal(\n        <ModalOverlay onClick={(e) => handleBackdropClick(e)}>\n            <ModalField>\n                <Box>{children}</Box>\n            </ModalField>\n        </ModalOverlay>,\n        document.getElementById('modal-root') || document.body\n    );\n};\n\nModal.propTypes = {\n    children: PropTypes.element.isRequired,\n    onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n\n\n\n\n\n\n","import styled from '@emotion/styled';\n\nexport const FormStyle = styled.div`\n    margin: 0px;\n    color: block;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n    padding: 0;\n    border-radius: 15px;\n`;\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 10px;\n    font-weight: 500;\n`;\n\nexport const Input = styled.input`\n    margin-top: 5px;\n    width: 400px;\n    height: 25px;\n    border: 0.5px solid black;\n    border-radius: 5px;\n    padding: 5px 15px;\n    letter-spacing: 1.5px;\n    font-size: 18px;\n`;\n\nexport const Button = styled.button`\n    width: 96px;\n    height: 24px;\n    background-color: white;\n    border: 1px solid gray;\n    border-radius: 5px;\n\n    &:hover,\n    &:focus {\n        cursor: pointer;\n        border-color: green;\n        color: green;\n    }\n\n    &:disabled {\n        cursor: auto;\n        border-color: gray;\n        color: gray;\n        background-color: lightgray;\n    }\n`;\n\nexport const Text = styled.h2`\n    margin: 0 0 10px 0;\n`;\n","import PropTypes from 'prop-types';\nimport { FormStyle, Label, Input, Button ,Text} from \"./EditForm.styled\";\n\nimport { useDispatch, useSelector } from \"react-redux\"; \nimport {  editContact } from \"redux/operations\";\nimport { useState } from 'react';\nimport { selectContacts } from 'redux/selectors';\nimport { Notify } from 'notiflix';\n\n\nconst EditForm = ({ onClose, id, name, number }) => {\n  \n    const dispatch = useDispatch();\n    \n    const initialName = name;\n    const initialNumber = number;\n    \n        \n    const [editName, setEditName] = useState(name);\n    const [editNumber, setEditNumber] = useState(number);\n\n    const contacts = useSelector(selectContacts);\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        const editContactName = contacts.find(contact => contact.name.toLowerCase() === editName.toLowerCase().trim());\n        \n        const editContactNumber = contacts.find(contact => contact.number === editNumber);\n        if (editContactName & !editContactNumber) {\n        Notify.failure(`Name  \"${editName}\"  is already in contacts`, Notify.init({\n            clickToClose: true,\n            position: 'center-top',\n        }));\n        return;\n        }\n        if (editContactNumber & !editContactName) {\n        Notify.failure(`Phone   \"${editNumber}\"  is already in contacts`, Notify.init({\n            clickToClose: true,\n            position: 'center-top',\n        }));\n        return;\n        }\n\n        \n        const form = event.currentTarget;\n        dispatch(editContact({\n        id,\n        name: form.elements.name.value,\n        number: form.elements.number.value,\n        }));\n\n        setTimeout(() => {\n        dispatch(editContact())\n        }, 500);\n\n        if (initialName !== editName) {\n        Notify.success(`Contact   \"${initialName}\"  has been changed to \"${editName}\"`, Notify.init({\n            clickToClose: true,\n            position: 'center-top',\n            }));\n        }\n        if (initialNumber !== editNumber) {\n        Notify.success(`Contact   \"${initialName}\"  number changed \"`, Notify.init({\n            clickToClose: true,\n            position: 'center-top',\n            }));\n        }\n\n        form.reset();\n    };\n\n\n\n\n    return(\n        <>\n        <form onSubmit={handleSubmit}>\n        <FormStyle>      \n            <Text>Edit contact</Text>\n        <Label>\n            Name \n            <Input\n            type='text' \n            name='name'\n            defaultValue={initialName} \n            onChange={(event) => setEditName(event.target.value)}\n            placeholder=\"John Smith\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            />\n        </Label> \n\n        <Label>\n            Phone \n            <Input\n            type='tel' \n            name='number'\n            defaultValue={initialNumber} \n            onChange={(event) => setEditNumber(event.target.value)}\n            placeholder=\"_ _ _ - _ _ _ - _ _ _ _\"\n            pattern=\"^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            />\n        </Label> \n\n            <div style={{ display: 'flex', gap: '20px', }}>\n                <Button\n                type=\"submit\"\n                disabled={initialName === editName & initialNumber === editNumber}\n                >Save</Button>\n                <Button type=\"button\" onClick={onClose}>Cancel</Button>\n            </div>\n        </FormStyle>\n        </form>\n        </>\n    )\n}\n\nexport default EditForm;\n\nEditForm.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n};","import PropTypes from \"prop-types\";\nimport { SearchList, ContactItem, Text, Button } from './ContactListItem.styled';\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"redux/operations\";\n\nimport { useState } from \"react\";\nimport Modal from \"components/Modal/Modal\";\nimport EditForm from \"components/EditForm/EditForm\";\nimport { Notify } from \"notiflix\";\n\nexport const ContactListItem = ({ renderListItem: { id, name, number } }) => {\n    const [showModal, setShowModal] = useState(false);\n\n    const closeModal = () => {\n        if (showModal) {\n        setShowModal(false);\n        };\n    };\n\n    const openModal = () => {\n        if (!showModal) {\n        setShowModal(true);\n        };\n    };\n    \n    const dispatch = useDispatch();\n\n    const handleDeletContact = ()=>{\n        dispatch(deleteContact(id));\n        Notify.success(`Contact   \"${name}\"  deleted`, Notify.init({\n            clickToClose: true,\n            position: 'center-top',\n        }));\n    }\n\n    return ( \n\n        <ContactItem key={id}>\n        <SearchList>\n            <Text>{name}:</Text>\n            <Text>{number}</Text>\n        </SearchList>\n        <div style={{display: \"flex\", gap: '10px'}}>\n            <Button type=\"button\" style={{width:'36px'}} onClick={openModal}>\n            Edit\n        </Button>\n            <Button type=\"button\" onClick={handleDeletContact}>\n            Delete\n        </Button>\n        </div>\n        {showModal &&\n            <Modal onClose={closeModal}>\n            <EditForm\n                id={id}\n                name={name}\n                number={number}\n                onClose={closeModal}\n            />\n            </Modal>}\n        </ContactItem>  \n    );\n};\n\nContactListItem.propTypes = {\n    renderListItem: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    }).isRequired,\n};","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n    padding: 0;\n`;\n\n","import { ContactListItem } from \"../ContactListItem/ContactListItem\";\n\nimport { List } from \"./ContactList.styled\";\n\nimport {  useSelector } from \"react-redux\";\nimport { selectFilteredContacts } from \"redux/selectors\";\n\n\n\nexport const ContactList = () => {\n    const filteredContacts = useSelector(selectFilteredContacts);\n    return (\n        <>\n        <List>    \n            {filteredContacts.map(contact => (\n                <ContactListItem\n                key={contact.id}\n                renderListItem={contact}\n                />            \n            )\n            )}    \n        </List>  \n        </> \n    );\n};","import styled from '@emotion/styled';\n\nexport const FormStyle = styled.div`\n    margin: 0px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n    padding: 0;\n    border-radius: 15px;\n`;\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 10px;\n    font-weight: 500;\n`;\n\nexport const Input = styled.input`\n    margin-top: 5px;\n    width: 400px;\n    height: 25px;\n    border: 0.5px solid black;\n    border-radius: 5px;\n    padding: 5px 15px;\n    letter-spacing: 1.5px;\n    font-size: 18px;\n`;\n\nexport const Button = styled.button`\n    width: 140px;\n    height: 24px;\n    background-color: white;\n    border: 1px solid gray;\n    border-radius: 5px;\n\n    &:hover,\n    &:focus {\n        cursor: pointer;\n        border-color: green;\n        color: green;\n    }\n\n    &:disabled {\n        cursor: auto;\n        border-color: gray;\n        color: gray;\n        background-color: #ddd;\n    }\n`;\n\nexport const Text = styled.h2`\n    margin: 0 0 10px 0;\n`;","import { useState } from \"react\";\n\nimport { FormStyle, Label, Input, Button, Text } from \"./ContactForm.styled\";\n\nimport { useDispatch, useSelector } from \"react-redux\"; \nimport { addContact } from \"redux/operations\";\nimport { selectContacts } from \"redux/selectors\";\nimport { Notify } from \"notiflix\";\n\n\nexport const ContactForm = ({ onClose }) => {\n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const contact = {\n            name: name,\n            number: number,\n    }\n    \n    const dispatch = useDispatch();\n\n    const contacts = useSelector(selectContacts);\n\n    const handleSubmit = event => {\n            event.preventDefault();\n\n    const newContactName = contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase().trim());\n    if (newContactName) {\n        Notify.failure(`Name  \"${name}\"  is already in contacts`, Notify.init({\n            clickToClose: true,\n            position: 'center-top',\n        }));\n        return;\n    }\n\n    const newContactNumber = contacts.find(contact => contact.number === number);\n    if (newContactNumber) {\n        Notify.failure(`Phone   \"${number}\"  is already in contacts`, Notify.init({\n            clickToClose: true,\n            position: 'center-top',\n        }));\n        return;\n    }\n\n    dispatch(addContact(contact));\n\n\n    Notify.success(`Contact \"${name}\" added in contacts`, Notify.init({\n        clickToClose: true,\n        position: 'center-top',\n    }));\n\n    reset();\n    };\n\n    const handleChange = event => {\n        const { name, value } = event.currentTarget;\n\n        switch (name) {\n        case 'name':\n            setName(value);\n            break;\n\n        case 'number':\n            setNumber(value);\n            break;\n\n        default:\n            return;\n        }\n    };\n\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n\n    return(\n        <>\n        <form onSubmit={handleSubmit}>\n            <FormStyle>      \n            <Text>Add new contact</Text>\n        <Label>\n            Name \n            <Input\n            type='text' \n            name='name'\n            value={name} \n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required='Name required'\n            />\n        </Label> \n\n        <Label>\n            Phone \n            <Input\n            type='tel' \n            name='number'\n            value={number} \n                onChange={handleChange}\n                placeholder=\"_ _ _ - _ _ _ - _ _ _ _\"\n            pattern=\"^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required='Phone number required'\n            />\n        </Label> \n            <div style={{ display: 'flex', gap: '140px', margin:'auto'}}>\n                <Button type=\"submit\" disabled={!name || !number} >Add contact</Button>\n                <Button type=\"button\" onClick={onClose}>Cancel</Button>\n            </div>\n            \n        </FormStyle>\n        </form>\n        </>\n    )\n}","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 10px;\n    font-weight: 500;\n    color: lightgrey;\n`;\n\nexport const Input = styled.input`\n    margin-top: 5px;\n    width: 250px;\n    height: 25px;\n    border: 0.5px solid black;\n    border-radius: 5px;\n    padding: 5px 15px;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { Label, Input } from './Filter.styled'\nimport { changeFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nexport const Filter = () => {\n\n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter)\n\n    return (\n        <Label>\n        Find contacts by name\n        <Input\n            type=\"text\"\n            name='contactsFilter'\n            value={filter}\n            onChange={(event) => dispatch(changeFilter(event.currentTarget.value))}>\n        </Input>\n        </Label>\n    );\n};","import styled from '@emotion/styled';\n\nexport const Box = styled.div`\n    padding: 30px 40px;\n    width: 440px;\n\n    border: 1px solid #aaa;\n    border-radius: 15px;\n    // box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 4px -1px,\n    //     rgba(0, 0, 0, 0.14) 0px 4px 5px 0px,\n    //     rgba(11, 127, 171, 0.5) 0px 0px 25px 5px;\n\n    margin: 30px auto;\n\n`;\n\nexport const Text = styled.h1`\n    margin: 0 0 10px 0;\n`;","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { fetchContacts } from 'redux/operations';\nimport { Filter } from 'components/Filter/filter';\nimport { Box } from './ContactsPage.styled';\nimport { Text } from './ContactsPage.styled';\nimport {\n  useContact\n} from 'hooks';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { Helmet } from 'react-helmet-async';\nimport { Button } from 'components/ContactForm/ContactForm.styled';\nimport Modal from 'components/Modal/Modal';\n\n\n\n\nexport default function ContactsPage() {\n    const [showModal, setShowModal] = useState(false);\n\n    const closeModal = () => {\n        if (showModal) {\n        setShowModal(false);\n        };\n    };\n\n    const openModal = () => {\n        if (!showModal) {\n        setShowModal(true);\n        };\n    };\n    \n    const dispatch = useDispatch();\n\n    const { isLoading, error } = useContact();\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <>\n        <Helmet>\n            <title>Contacts</title>\n        </Helmet>\n\n\n        <Box>\n            {error && <p>{error}</p>}\n            {isLoading ? (\n            <RotatingLines\n                strokeColor=\"rgb(11, 127, 171)\"\n                strokeWidth=\"5\"\n                animationDuration=\"0.75\"\n                width=\"96\"\n                visible={true}\n            />\n            ) : (\n            <>\n                <div style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    \n                }}>\n                    <Text>Contacts</Text>\n                    <Button type=\"button\"  onClick={openModal}>Add contact</Button>\n                </div>\n                <Filter />\n                <ContactList />\n                {showModal &&\n            <Modal onClose={closeModal}>\n            <ContactForm\n                onClose={closeModal}\n            />\n            </Modal>}\n            </>\n            )}\n        </Box>\n        </>\n    );\n}"],"names":["SearchList","styled","_templateObject","_taggedTemplateLiteral","ContactItem","_templateObject2","Text","_templateObject3","Button","_templateObject4","ModalOverlay","Box","ModalField","_ref","children","onClose","useEffect","handleOnClose","event","code","window","addEventListener","removeEventListener","createPortal","_jsx","onClick","e","currentTarget","target","handleBackdropClick","document","getElementById","body","FormStyle","Label","Input","_templateObject5","id","name","number","dispatch","useDispatch","initialName","initialNumber","_useState","useState","_useState2","_slicedToArray","editName","setEditName","_useState3","_useState4","editNumber","setEditNumber","contacts","useSelector","selectContacts","_Fragment","onSubmit","preventDefault","editContactName","find","contact","toLowerCase","trim","editContactNumber","Notify","concat","clickToClose","position","form","editContact","elements","value","setTimeout","reset","_jsxs","type","defaultValue","onChange","placeholder","pattern","title","required","style","display","gap","disabled","ContactListItem","_ref$renderListItem","renderListItem","showModal","setShowModal","closeModal","width","deleteContact","Modal","EditForm","List","ContactList","filteredContacts","selectFilteredContacts","map","ContactForm","setName","setNumber","handleChange","_event$currentTarget","newContactName","newContactNumber","addContact","margin","Filter","filter","selectFilter","changeFilter","ContactsPage","_useContact","useContact","isLoading","error","fetchContacts","Helmet","RotatingLines","strokeColor","strokeWidth","animationDuration","visible","justifyContent","alignItems"],"sourceRoot":""}